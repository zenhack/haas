# clear all existing partitions. This gives us a known state to work with.
clearpart --all --drives=sda

# set up the disk; This is mostly copied from what you get by doing a
# manual install with automated partitioning ("use whole disk").
part /boot --fstype=ext4 --size=500
part pv.008002 --grow --size=1
volgroup vg_moccompute --pesize=4096 pv.008002
logvol swap --recommended --name lv_swap --vgname vg_moccompute
logvol / --fstype=ext4 --name lv_root --vgname=vg_moccompute --grow --size=1

# Set up the network. The example below assumes that eth1 is connected to the
# outside world, and will be used to fetch packages during the installation. It
# also assumes eth0 is the boot nic. Both are brought up via dhcp on boot, so
# the node will be accessible both from the outside world, and from the headnode
# via the pxe network.
#
# External network access is required for the install, so the relevant nic
# should be given the --activate option, which causes it to be brought up
# *during* the install (not just in the final system).
network --onboot yes --device eth1 --bootproto dhcp --activate
network --onboot yes --device eth0 --bootproto dhcp

# red hat docs say these options are required:
authconfig --useshadow --pasalgo=sha512
bootloader --location=mbr
keyboard us
lang en_US
timezone --utc US/Eastern

# WARNING WARNING: You should change this to something more secure *before*
# perofrming an install; without any other changes to the node will come up with
# ssh enabled, using password auth, and allowing root logins -- We recommend
# changing that as soon as possible, but don't do so during the install here to
# keep this example simple.
rootpw r00tme

# we want the machine to reboot on it's own when finished with installation:
reboot

# we do *not* want to be prompted for anything; if we need to be, installation should fail:
cmdline

# set up repositories
url --url http://mirrors.mit.edu/centos/6.5/os/x86_64

%packages
@core
@server-policy

%post

# notify the head node that we're done with the install
curl -X DELETE http://192.168.10.1:8080/$(ip link show em1|grep ether|awk '{print $2}')
